#!/bin/sh

TMP_FILE="$HOME/.config/bspwm/.gap-state"
POLYBAR_LAUNCH_SCRIPT="$HOME/.config/polybar/launch.sh"
PICOM_CONF_PATH="$HOME/.config/picom.conf"

reload_polybar() {
    $POLYBAR_LAUNCH_SCRIPT
}

get_picom_rounding() {
    cat $PICOM_CONF_PATH | while read line
    do
        if [[ $line =~ corner-radius.* ]]; then
            value=$(echo $line| cut -d'=' -f 2)
            echo $value
            return 0
        fi
    done
}

# Usage:
# set_picom_rounding <on | off>
set_picom_rounding() {
    local value;
    if [[ $1 == "on" ]]; then
        value=15
    elif [[ $1 == "off" ]]; then
        value=0
    else 
        echo "Invalud argument for toggle_picom_rounding expect <on | off>"
        exit 1
    fi
    sed -i "s/corner-radius\s*=\s*.*/corner-radius=$value/g" $PICOM_CONF_PATH
}

enable_gaps() {
    echo "enabled" > $TMP_FILE
    bspc config -m "DP-0" top_padding   40
    bspc config border_width          3
    bspc config window_gap            10
    reload_polybar
    set_picom_rounding on
}

disable_gaps() {
    echo "disabled" > $TMP_FILE
    bspc config -m "DP-0" top_padding   30
    bspc config border_width          2
    bspc config window_gap            0
    reload_polybar
    set_picom_rounding off
}

restore_gaps() {
    if [[ $(cat $TMP_FILE) == "enabled" ]]; then
        enable_gaps
    elif [[ $(cat $TMP_FILE) == "disabled" ]]; then
        disable_gaps
    fi
}

toggle_gaps() {
    if [[ $(cat $TMP_FILE) == "enabled" ]]; then
        disable_gaps
    elif [[ $(cat $TMP_FILE) == "disabled" ]]; then
        enable_gaps
    else 
        enable_gaps
    fi
}

if [[ $1 == "enable" ]] || [[ $1 = "" ]]; then
    enable_gaps
elif [[ $1 == "disable" ]]; then
    disable_gaps
elif [[ $1 == "restore" ]] && [[ -f $TMP_FILE ]]; then
    restore_gaps
elif [[ $1 == "toggle" ]]; then
    toggle_gaps
elif [[ $1 == "status" ]]; then
    cat $TMP_FILE
else
    echo "Usage: ~/.config/bspwm/gaps [enable|disable|restore|toggle|status]"
fi
